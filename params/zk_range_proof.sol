// SPDX-License-Identifier: MIT
    pragma solidity ^0.8.17;
    
    contract Verifier {
        function verify(
            uint256[] memory pubInputs,
            bytes memory proof
        ) public view returns (bool) {
            bool success = true;
            bytes32[538] memory transcript;
            assembly {                    let f_p := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47                    let f_q := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001                    function validate_ec_point(x, y) -> valid {                        {                            let x_lt_p := lt(x, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            let y_lt_p := lt(y, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            valid := and(x_lt_p, y_lt_p)                        }                        {                            let y_square := mulmod(y, y, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            let x_square := mulmod(x, x, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            let x_cube := mulmod(x_square, x, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            let x_cube_plus_3 := addmod(x_cube, 3, 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47)                            let is_affine := eq(x_cube_plus_3, y_square)                            valid := and(valid, is_affine)                        }                    }                    mstore(add(transcript, 0x20), mod(mload(add(pubInputs, 0x20)), f_q))mstore(add(transcript, 0x40), mod(mload(add(pubInputs, 0x40)), f_q))mstore(add(transcript, 0x60), mod(mload(add(pubInputs, 0x60)), f_q))mstore(add(transcript, 0x80), mod(mload(add(pubInputs, 0x80)), f_q))mstore(add(transcript, 0x0), 1157905578767748493231361385440985776087691641125846590279920273780154191843)        {            let x := mload(add(proof, 0x20))            mstore(add(transcript, 0xa0), x)            let y := mload(add(proof, 0x40))            mstore(add(transcript, 0xc0), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0xe0), keccak256(add(transcript, 0x0), 224)){            let hash := mload(add(transcript, 0xe0))            mstore(add(transcript, 0x100), mod(hash, f_q))            mstore(add(transcript, 0x120), hash)        }        {            let x := mload(add(proof, 0x60))            mstore(add(transcript, 0x140), x)            let y := mload(add(proof, 0x80))            mstore(add(transcript, 0x160), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0xa0))            mstore(add(transcript, 0x180), x)            let y := mload(add(proof, 0xc0))            mstore(add(transcript, 0x1a0), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0x1c0), keccak256(add(transcript, 0x120), 160)){            let hash := mload(add(transcript, 0x1c0))            mstore(add(transcript, 0x1e0), mod(hash, f_q))            mstore(add(transcript, 0x200), hash)        }mstore8(add(transcript, 0x220), 1)mstore(add(transcript, 0x220), keccak256(add(transcript, 0x200), 33)){            let hash := mload(add(transcript, 0x220))            mstore(add(transcript, 0x240), mod(hash, f_q))            mstore(add(transcript, 0x260), hash)        }        {            let x := mload(add(proof, 0xe0))            mstore(add(transcript, 0x280), x)            let y := mload(add(proof, 0x100))            mstore(add(transcript, 0x2a0), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x120))            mstore(add(transcript, 0x2c0), x)            let y := mload(add(proof, 0x140))            mstore(add(transcript, 0x2e0), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x160))            mstore(add(transcript, 0x300), x)            let y := mload(add(proof, 0x180))            mstore(add(transcript, 0x320), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0x340), keccak256(add(transcript, 0x260), 224)){            let hash := mload(add(transcript, 0x340))            mstore(add(transcript, 0x360), mod(hash, f_q))            mstore(add(transcript, 0x380), hash)        }        {            let x := mload(add(proof, 0x1a0))            mstore(add(transcript, 0x3a0), x)            let y := mload(add(proof, 0x1c0))            mstore(add(transcript, 0x3c0), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x1e0))            mstore(add(transcript, 0x3e0), x)            let y := mload(add(proof, 0x200))            mstore(add(transcript, 0x400), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x220))            mstore(add(transcript, 0x420), x)            let y := mload(add(proof, 0x240))            mstore(add(transcript, 0x440), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x260))            mstore(add(transcript, 0x460), x)            let y := mload(add(proof, 0x280))            mstore(add(transcript, 0x480), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0x4a0), keccak256(add(transcript, 0x380), 288)){            let hash := mload(add(transcript, 0x4a0))            mstore(add(transcript, 0x4c0), mod(hash, f_q))            mstore(add(transcript, 0x4e0), hash)        }mstore(add(transcript, 0x500), mod(mload(add(proof, 0x2a0)), f_q))mstore(add(transcript, 0x520), mod(mload(add(proof, 0x2c0)), f_q))mstore(add(transcript, 0x540), mod(mload(add(proof, 0x2e0)), f_q))mstore(add(transcript, 0x560), mod(mload(add(proof, 0x300)), f_q))mstore(add(transcript, 0x580), mod(mload(add(proof, 0x320)), f_q))mstore(add(transcript, 0x5a0), mod(mload(add(proof, 0x340)), f_q))mstore(add(transcript, 0x5c0), mod(mload(add(proof, 0x360)), f_q))mstore(add(transcript, 0x5e0), mod(mload(add(proof, 0x380)), f_q))mstore(add(transcript, 0x600), mod(mload(add(proof, 0x3a0)), f_q))mstore(add(transcript, 0x620), mod(mload(add(proof, 0x3c0)), f_q))mstore(add(transcript, 0x640), mod(mload(add(proof, 0x3e0)), f_q))mstore(add(transcript, 0x660), mod(mload(add(proof, 0x400)), f_q))mstore(add(transcript, 0x680), mod(mload(add(proof, 0x420)), f_q))mstore(add(transcript, 0x6a0), mod(mload(add(proof, 0x440)), f_q))mstore(add(transcript, 0x6c0), mod(mload(add(proof, 0x460)), f_q))mstore(add(transcript, 0x6e0), mod(mload(add(proof, 0x480)), f_q))mstore(add(transcript, 0x700), mod(mload(add(proof, 0x4a0)), f_q))mstore(add(transcript, 0x720), mod(mload(add(proof, 0x4c0)), f_q))mstore(add(transcript, 0x740), mod(mload(add(proof, 0x4e0)), f_q))mstore(add(transcript, 0x760), keccak256(add(transcript, 0x4e0), 640)){            let hash := mload(add(transcript, 0x760))            mstore(add(transcript, 0x780), mod(hash, f_q))            mstore(add(transcript, 0x7a0), hash)        }        {            let x := mload(add(proof, 0x500))            mstore(add(transcript, 0x7c0), x)            let y := mload(add(proof, 0x520))            mstore(add(transcript, 0x7e0), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x540))            mstore(add(transcript, 0x800), x)            let y := mload(add(proof, 0x560))            mstore(add(transcript, 0x820), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x580))            mstore(add(transcript, 0x840), x)            let y := mload(add(proof, 0x5a0))            mstore(add(transcript, 0x860), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x5c0))            mstore(add(transcript, 0x880), x)            let y := mload(add(proof, 0x5e0))            mstore(add(transcript, 0x8a0), y)            success := and(validate_ec_point(x, y), success)        }        {            let x := mload(add(proof, 0x600))            mstore(add(transcript, 0x8c0), x)            let y := mload(add(proof, 0x620))            mstore(add(transcript, 0x8e0), y)            success := and(validate_ec_point(x, y), success)        }mstore(add(transcript, 0x900), keccak256(add(transcript, 0x7a0), 352)){            let hash := mload(add(transcript, 0x900))            mstore(add(transcript, 0x920), mod(hash, f_q))            mstore(add(transcript, 0x940), hash)        }mstore(add(transcript, 0x960), mulmod(mload(add(transcript, 0x4c0)), mload(add(transcript, 0x4c0)), f_q))mstore(add(transcript, 0x980), mulmod(mload(add(transcript, 0x960)), mload(add(transcript, 0x960)), f_q))mstore(add(transcript, 0x9a0), mulmod(mload(add(transcript, 0x980)), mload(add(transcript, 0x980)), f_q))mstore(add(transcript, 0x9c0), mulmod(mload(add(transcript, 0x9a0)), mload(add(transcript, 0x9a0)), f_q))mstore(add(transcript, 0x9e0), mulmod(mload(add(transcript, 0x9c0)), mload(add(transcript, 0x9c0)), f_q))mstore(add(transcript, 0xa00), mulmod(mload(add(transcript, 0x9e0)), mload(add(transcript, 0x9e0)), f_q))mstore(add(transcript, 0xa20), mulmod(mload(add(transcript, 0xa00)), mload(add(transcript, 0xa00)), f_q))mstore(add(transcript, 0xa40), mulmod(mload(add(transcript, 0xa20)), mload(add(transcript, 0xa20)), f_q))mstore(add(transcript, 0xa60), mulmod(mload(add(transcript, 0xa40)), mload(add(transcript, 0xa40)), f_q))mstore(add(transcript, 0xa80), addmod(mload(add(transcript, 0xa60)), 21888242871839275222246405745257275088548364400416034343698204186575808495616, f_q))mstore(add(transcript, 0xaa0), mulmod(mload(add(transcript, 0xa80)), 21845492397480214137827955734036069473141043376196471776620668631523902619649, f_q))mstore(add(transcript, 0xac0), mulmod(mload(add(transcript, 0xaa0)), 7034078487751060429692391068106595824450898222465099809952900932390213787282, f_q))mstore(add(transcript, 0xae0), addmod(mload(add(transcript, 0x4c0)), 14854164384088214792554014677150679264097466177950934533745303254185594708335, f_q))mstore(add(transcript, 0xb00), mulmod(mload(add(transcript, 0xaa0)), 11423757818648818765461327411617109120243501240676889555478397529313037714234, f_q))mstore(add(transcript, 0xb20), addmod(mload(add(transcript, 0x4c0)), 10464485053190456456785078333640165968304863159739144788219806657262770781383, f_q))mstore(add(transcript, 0xb40), mulmod(mload(add(transcript, 0xaa0)), 18658909205715493985327367002986689246357274798059125448824250603171843521466, f_q))mstore(add(transcript, 0xb60), addmod(mload(add(transcript, 0x4c0)), 3229333666123781236919038742270585842191089602356908894873953583403964974151, f_q))mstore(add(transcript, 0xb80), mulmod(mload(add(transcript, 0xaa0)), 13677048343952077794467995888380402608453928821079198134318291065290235358859, f_q))mstore(add(transcript, 0xba0), addmod(mload(add(transcript, 0x4c0)), 8211194527887197427778409856876872480094435579336836209379913121285573136758, f_q))mstore(add(transcript, 0xbc0), mulmod(mload(add(transcript, 0xaa0)), 9936069627611189518829255670237324269287146421271524553312532036927871056678, f_q))mstore(add(transcript, 0xbe0), addmod(mload(add(transcript, 0x4c0)), 11952173244228085703417150075019950819261217979144509790385672149647937438939, f_q))mstore(add(transcript, 0xc00), mulmod(mload(add(transcript, 0xaa0)), 14158528901797138466244491986759313854666262535363044392173788062030301470987, f_q))mstore(add(transcript, 0xc20), addmod(mload(add(transcript, 0x4c0)), 7729713970042136756001913758497961233882101865052989951524416124545507024630, f_q))mstore(add(transcript, 0xc40), mulmod(mload(add(transcript, 0xaa0)), 4260969412351770314333984243767775737437927068151180798236715529158398853173, f_q))mstore(add(transcript, 0xc60), addmod(mload(add(transcript, 0x4c0)), 17627273459487504907912421501489499351110437332264853545461488657417409642444, f_q))mstore(add(transcript, 0xc80), mulmod(mload(add(transcript, 0xaa0)), 1, f_q))mstore(add(transcript, 0xca0), addmod(mload(add(transcript, 0x4c0)), 21888242871839275222246405745257275088548364400416034343698204186575808495616, f_q))mstore(add(transcript, 0xcc0), mulmod(mload(add(transcript, 0xaa0)), 6252951856119339508807713076978770803512896272623217303779254502899773638908, f_q))mstore(add(transcript, 0xce0), addmod(mload(add(transcript, 0x4c0)), 15635291015719935713438692668278504285035468127792817039918949683676034856709, f_q))mstore(add(transcript, 0xd00), mulmod(mload(add(transcript, 0xaa0)), 7393649265675507591155086225434297871937368251641985215568891852805958167681, f_q))mstore(add(transcript, 0xd20), addmod(mload(add(transcript, 0x4c0)), 14494593606163767631091319519822977216610996148774049128129312333769850327936, f_q))mstore(add(transcript, 0xd40), mulmod(mload(add(transcript, 0xaa0)), 7274544076708594923658723438209548371461798187263202684844743708658536398896, f_q))mstore(add(transcript, 0xd60), addmod(mload(add(transcript, 0x4c0)), 14613698795130680298587682307047726717086566213152831658853460477917272096721, f_q)){            let prod := mload(add(transcript, 0xae0))                prod := mulmod(mload(add(transcript, 0xb20)), prod, f_q)                mstore(add(transcript, 0xd80), prod)                            prod := mulmod(mload(add(transcript, 0xb60)), prod, f_q)                mstore(add(transcript, 0xda0), prod)                            prod := mulmod(mload(add(transcript, 0xba0)), prod, f_q)                mstore(add(transcript, 0xdc0), prod)                            prod := mulmod(mload(add(transcript, 0xbe0)), prod, f_q)                mstore(add(transcript, 0xde0), prod)                            prod := mulmod(mload(add(transcript, 0xc20)), prod, f_q)                mstore(add(transcript, 0xe00), prod)                            prod := mulmod(mload(add(transcript, 0xc60)), prod, f_q)                mstore(add(transcript, 0xe20), prod)                            prod := mulmod(mload(add(transcript, 0xca0)), prod, f_q)                mstore(add(transcript, 0xe40), prod)                            prod := mulmod(mload(add(transcript, 0xce0)), prod, f_q)                mstore(add(transcript, 0xe60), prod)                            prod := mulmod(mload(add(transcript, 0xd20)), prod, f_q)                mstore(add(transcript, 0xe80), prod)                            prod := mulmod(mload(add(transcript, 0xd60)), prod, f_q)                mstore(add(transcript, 0xea0), prod)                            prod := mulmod(mload(add(transcript, 0xa80)), prod, f_q)                mstore(add(transcript, 0xec0), prod)                    }mstore(add(transcript, 0xf00), 32)mstore(add(transcript, 0xf20), 32)mstore(add(transcript, 0xf40), 32)mstore(add(transcript, 0xf60), mload(add(transcript, 0xec0)))mstore(add(transcript, 0xf80), 21888242871839275222246405745257275088548364400416034343698204186575808495615)mstore(add(transcript, 0xfa0), 21888242871839275222246405745257275088548364400416034343698204186575808495617)success := and(eq(staticcall(gas(), 0x5, add(transcript, 0xf00), 0xc0, add(transcript, 0xee0), 0x20), 1), success){                        let inv := mload(add(transcript, 0xee0))            let v                            v := mload(add(transcript, 0xa80))                    mstore(add(transcript, 0xa80), mulmod(mload(add(transcript, 0xea0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xd60))                    mstore(add(transcript, 0xd60), mulmod(mload(add(transcript, 0xe80)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xd20))                    mstore(add(transcript, 0xd20), mulmod(mload(add(transcript, 0xe60)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xce0))                    mstore(add(transcript, 0xce0), mulmod(mload(add(transcript, 0xe40)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xca0))                    mstore(add(transcript, 0xca0), mulmod(mload(add(transcript, 0xe20)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xc60))                    mstore(add(transcript, 0xc60), mulmod(mload(add(transcript, 0xe00)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xc20))                    mstore(add(transcript, 0xc20), mulmod(mload(add(transcript, 0xde0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xbe0))                    mstore(add(transcript, 0xbe0), mulmod(mload(add(transcript, 0xdc0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xba0))                    mstore(add(transcript, 0xba0), mulmod(mload(add(transcript, 0xda0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xb60))                    mstore(add(transcript, 0xb60), mulmod(mload(add(transcript, 0xd80)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0xb20))                    mstore(add(transcript, 0xb20), mulmod(mload(add(transcript, 0xae0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                mstore(add(transcript, 0xae0), inv)        }mstore(add(transcript, 0xfc0), mulmod(mload(add(transcript, 0xac0)), mload(add(transcript, 0xae0)), f_q))mstore(add(transcript, 0xfe0), mulmod(mload(add(transcript, 0xb00)), mload(add(transcript, 0xb20)), f_q))mstore(add(transcript, 0x1000), mulmod(mload(add(transcript, 0xb40)), mload(add(transcript, 0xb60)), f_q))mstore(add(transcript, 0x1020), mulmod(mload(add(transcript, 0xb80)), mload(add(transcript, 0xba0)), f_q))mstore(add(transcript, 0x1040), mulmod(mload(add(transcript, 0xbc0)), mload(add(transcript, 0xbe0)), f_q))mstore(add(transcript, 0x1060), mulmod(mload(add(transcript, 0xc00)), mload(add(transcript, 0xc20)), f_q))mstore(add(transcript, 0x1080), mulmod(mload(add(transcript, 0xc40)), mload(add(transcript, 0xc60)), f_q))mstore(add(transcript, 0x10a0), mulmod(mload(add(transcript, 0xc80)), mload(add(transcript, 0xca0)), f_q))mstore(add(transcript, 0x10c0), mulmod(mload(add(transcript, 0xcc0)), mload(add(transcript, 0xce0)), f_q))mstore(add(transcript, 0x10e0), mulmod(mload(add(transcript, 0xd00)), mload(add(transcript, 0xd20)), f_q))mstore(add(transcript, 0x1100), mulmod(mload(add(transcript, 0xd40)), mload(add(transcript, 0xd60)), f_q)){            let result := mulmod(mload(add(transcript, 0x10a0)), mload(add(transcript, 0x20)), f_q)result := addmod(mulmod(mload(add(transcript, 0x10c0)), mload(add(transcript, 0x40)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x10e0)), mload(add(transcript, 0x60)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x1100)), mload(add(transcript, 0x80)), f_q), result, f_q)mstore(add(transcript, 0x1120), result)        }mstore(add(transcript, 0x1140), mulmod(mload(add(transcript, 0x540)), mload(add(transcript, 0x520)), f_q))mstore(add(transcript, 0x1160), addmod(mload(add(transcript, 0x500)), mload(add(transcript, 0x1140)), f_q))mstore(add(transcript, 0x1180), addmod(mload(add(transcript, 0x1160)), sub(f_q, mload(add(transcript, 0x560))), f_q))mstore(add(transcript, 0x11a0), mulmod(mload(add(transcript, 0x1180)), mload(add(transcript, 0x5e0)), f_q))mstore(add(transcript, 0x11c0), mulmod(mload(add(transcript, 0x360)), mload(add(transcript, 0x11a0)), f_q))mstore(add(transcript, 0x11e0), addmod(1, sub(f_q, mload(add(transcript, 0x680))), f_q))mstore(add(transcript, 0x1200), mulmod(mload(add(transcript, 0x11e0)), mload(add(transcript, 0x10a0)), f_q))mstore(add(transcript, 0x1220), addmod(mload(add(transcript, 0x11c0)), mload(add(transcript, 0x1200)), f_q))mstore(add(transcript, 0x1240), mulmod(mload(add(transcript, 0x360)), mload(add(transcript, 0x1220)), f_q))mstore(add(transcript, 0x1260), mulmod(mload(add(transcript, 0x680)), mload(add(transcript, 0x680)), f_q))mstore(add(transcript, 0x1280), addmod(mload(add(transcript, 0x1260)), sub(f_q, mload(add(transcript, 0x680))), f_q))mstore(add(transcript, 0x12a0), mulmod(mload(add(transcript, 0x1280)), mload(add(transcript, 0xfc0)), f_q))mstore(add(transcript, 0x12c0), addmod(mload(add(transcript, 0x1240)), mload(add(transcript, 0x12a0)), f_q))mstore(add(transcript, 0x12e0), mulmod(mload(add(transcript, 0x360)), mload(add(transcript, 0x12c0)), f_q))mstore(add(transcript, 0x1300), addmod(1, sub(f_q, mload(add(transcript, 0xfc0))), f_q))mstore(add(transcript, 0x1320), addmod(mload(add(transcript, 0xfe0)), mload(add(transcript, 0x1000)), f_q))mstore(add(transcript, 0x1340), addmod(mload(add(transcript, 0x1320)), mload(add(transcript, 0x1020)), f_q))mstore(add(transcript, 0x1360), addmod(mload(add(transcript, 0x1340)), mload(add(transcript, 0x1040)), f_q))mstore(add(transcript, 0x1380), addmod(mload(add(transcript, 0x1360)), mload(add(transcript, 0x1060)), f_q))mstore(add(transcript, 0x13a0), addmod(mload(add(transcript, 0x1380)), mload(add(transcript, 0x1080)), f_q))mstore(add(transcript, 0x13c0), addmod(mload(add(transcript, 0x1300)), sub(f_q, mload(add(transcript, 0x13a0))), f_q))mstore(add(transcript, 0x13e0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x1e0)), f_q))mstore(add(transcript, 0x1400), addmod(mload(add(transcript, 0x580)), mload(add(transcript, 0x13e0)), f_q))mstore(add(transcript, 0x1420), addmod(mload(add(transcript, 0x1400)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x1440), mulmod(mload(add(transcript, 0x640)), mload(add(transcript, 0x1e0)), f_q))mstore(add(transcript, 0x1460), addmod(mload(add(transcript, 0x500)), mload(add(transcript, 0x1440)), f_q))mstore(add(transcript, 0x1480), addmod(mload(add(transcript, 0x1460)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x14a0), mulmod(mload(add(transcript, 0x1480)), mload(add(transcript, 0x1420)), f_q))mstore(add(transcript, 0x14c0), mulmod(mload(add(transcript, 0x660)), mload(add(transcript, 0x1e0)), f_q))mstore(add(transcript, 0x14e0), addmod(mload(add(transcript, 0x1120)), mload(add(transcript, 0x14c0)), f_q))mstore(add(transcript, 0x1500), addmod(mload(add(transcript, 0x14e0)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x1520), mulmod(mload(add(transcript, 0x1500)), mload(add(transcript, 0x14a0)), f_q))mstore(add(transcript, 0x1540), mulmod(mload(add(transcript, 0x1520)), mload(add(transcript, 0x6a0)), f_q))mstore(add(transcript, 0x1560), mulmod(1, mload(add(transcript, 0x1e0)), f_q))mstore(add(transcript, 0x1580), mulmod(mload(add(transcript, 0x4c0)), mload(add(transcript, 0x1560)), f_q))mstore(add(transcript, 0x15a0), addmod(mload(add(transcript, 0x580)), mload(add(transcript, 0x1580)), f_q))mstore(add(transcript, 0x15c0), addmod(mload(add(transcript, 0x15a0)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x15e0), mulmod(4131629893567559867359510883348571134090853742863529169391034518566172092834, mload(add(transcript, 0x1e0)), f_q))mstore(add(transcript, 0x1600), mulmod(mload(add(transcript, 0x4c0)), mload(add(transcript, 0x15e0)), f_q))mstore(add(transcript, 0x1620), addmod(mload(add(transcript, 0x500)), mload(add(transcript, 0x1600)), f_q))mstore(add(transcript, 0x1640), addmod(mload(add(transcript, 0x1620)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x1660), mulmod(mload(add(transcript, 0x1640)), mload(add(transcript, 0x15c0)), f_q))mstore(add(transcript, 0x1680), mulmod(8910878055287538404433155982483128285667088683464058436815641868457422632747, mload(add(transcript, 0x1e0)), f_q))mstore(add(transcript, 0x16a0), mulmod(mload(add(transcript, 0x4c0)), mload(add(transcript, 0x1680)), f_q))mstore(add(transcript, 0x16c0), addmod(mload(add(transcript, 0x1120)), mload(add(transcript, 0x16a0)), f_q))mstore(add(transcript, 0x16e0), addmod(mload(add(transcript, 0x16c0)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x1700), mulmod(mload(add(transcript, 0x16e0)), mload(add(transcript, 0x1660)), f_q))mstore(add(transcript, 0x1720), mulmod(mload(add(transcript, 0x1700)), mload(add(transcript, 0x680)), f_q))mstore(add(transcript, 0x1740), addmod(mload(add(transcript, 0x1540)), sub(f_q, mload(add(transcript, 0x1720))), f_q))mstore(add(transcript, 0x1760), mulmod(mload(add(transcript, 0x1740)), mload(add(transcript, 0x13c0)), f_q))mstore(add(transcript, 0x1780), addmod(mload(add(transcript, 0x12e0)), mload(add(transcript, 0x1760)), f_q))mstore(add(transcript, 0x17a0), mulmod(mload(add(transcript, 0x360)), mload(add(transcript, 0x1780)), f_q))mstore(add(transcript, 0x17c0), addmod(1, sub(f_q, mload(add(transcript, 0x6c0))), f_q))mstore(add(transcript, 0x17e0), mulmod(mload(add(transcript, 0x17c0)), mload(add(transcript, 0x10a0)), f_q))mstore(add(transcript, 0x1800), addmod(mload(add(transcript, 0x17a0)), mload(add(transcript, 0x17e0)), f_q))mstore(add(transcript, 0x1820), mulmod(mload(add(transcript, 0x360)), mload(add(transcript, 0x1800)), f_q))mstore(add(transcript, 0x1840), mulmod(mload(add(transcript, 0x6c0)), mload(add(transcript, 0x6c0)), f_q))mstore(add(transcript, 0x1860), addmod(mload(add(transcript, 0x1840)), sub(f_q, mload(add(transcript, 0x6c0))), f_q))mstore(add(transcript, 0x1880), mulmod(mload(add(transcript, 0x1860)), mload(add(transcript, 0xfc0)), f_q))mstore(add(transcript, 0x18a0), addmod(mload(add(transcript, 0x1820)), mload(add(transcript, 0x1880)), f_q))mstore(add(transcript, 0x18c0), mulmod(mload(add(transcript, 0x360)), mload(add(transcript, 0x18a0)), f_q))mstore(add(transcript, 0x18e0), addmod(mload(add(transcript, 0x700)), mload(add(transcript, 0x1e0)), f_q))mstore(add(transcript, 0x1900), mulmod(mload(add(transcript, 0x18e0)), mload(add(transcript, 0x6e0)), f_q))mstore(add(transcript, 0x1920), addmod(mload(add(transcript, 0x740)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x1940), mulmod(mload(add(transcript, 0x1920)), mload(add(transcript, 0x1900)), f_q))mstore(add(transcript, 0x1960), mulmod(mload(add(transcript, 0x500)), mload(add(transcript, 0x5c0)), f_q))mstore(add(transcript, 0x1980), addmod(mload(add(transcript, 0x1960)), mload(add(transcript, 0x1e0)), f_q))mstore(add(transcript, 0x19a0), mulmod(mload(add(transcript, 0x1980)), mload(add(transcript, 0x6c0)), f_q))mstore(add(transcript, 0x19c0), addmod(mload(add(transcript, 0x5a0)), mload(add(transcript, 0x240)), f_q))mstore(add(transcript, 0x19e0), mulmod(mload(add(transcript, 0x19c0)), mload(add(transcript, 0x19a0)), f_q))mstore(add(transcript, 0x1a00), addmod(mload(add(transcript, 0x1940)), sub(f_q, mload(add(transcript, 0x19e0))), f_q))mstore(add(transcript, 0x1a20), mulmod(mload(add(transcript, 0x1a00)), mload(add(transcript, 0x13c0)), f_q))mstore(add(transcript, 0x1a40), addmod(mload(add(transcript, 0x18c0)), mload(add(transcript, 0x1a20)), f_q))mstore(add(transcript, 0x1a60), mulmod(mload(add(transcript, 0x360)), mload(add(transcript, 0x1a40)), f_q))mstore(add(transcript, 0x1a80), addmod(mload(add(transcript, 0x700)), sub(f_q, mload(add(transcript, 0x740))), f_q))mstore(add(transcript, 0x1aa0), mulmod(mload(add(transcript, 0x1a80)), mload(add(transcript, 0x10a0)), f_q))mstore(add(transcript, 0x1ac0), addmod(mload(add(transcript, 0x1a60)), mload(add(transcript, 0x1aa0)), f_q))mstore(add(transcript, 0x1ae0), mulmod(mload(add(transcript, 0x360)), mload(add(transcript, 0x1ac0)), f_q))mstore(add(transcript, 0x1b00), mulmod(mload(add(transcript, 0x1a80)), mload(add(transcript, 0x13c0)), f_q))mstore(add(transcript, 0x1b20), addmod(mload(add(transcript, 0x700)), sub(f_q, mload(add(transcript, 0x720))), f_q))mstore(add(transcript, 0x1b40), mulmod(mload(add(transcript, 0x1b20)), mload(add(transcript, 0x1b00)), f_q))mstore(add(transcript, 0x1b60), addmod(mload(add(transcript, 0x1ae0)), mload(add(transcript, 0x1b40)), f_q))mstore(add(transcript, 0x1b80), mulmod(mload(add(transcript, 0xa60)), mload(add(transcript, 0xa60)), f_q))mstore(add(transcript, 0x1ba0), mulmod(mload(add(transcript, 0x1b80)), mload(add(transcript, 0xa60)), f_q))mstore(add(transcript, 0x1bc0), mulmod(mload(add(transcript, 0x1ba0)), mload(add(transcript, 0xa60)), f_q))mstore(add(transcript, 0x1be0), mulmod(1, mload(add(transcript, 0xa60)), f_q))mstore(add(transcript, 0x1c00), mulmod(1, mload(add(transcript, 0x1b80)), f_q))mstore(add(transcript, 0x1c20), mulmod(1, mload(add(transcript, 0x1ba0)), f_q))mstore(add(transcript, 0x1c40), mulmod(mload(add(transcript, 0x1b60)), mload(add(transcript, 0xa80)), f_q))mstore(add(transcript, 0x1c60), mulmod(mload(add(transcript, 0x920)), mload(add(transcript, 0x920)), f_q))mstore(add(transcript, 0x1c80), mulmod(mload(add(transcript, 0x1c60)), mload(add(transcript, 0x920)), f_q))mstore(add(transcript, 0x1ca0), mulmod(mload(add(transcript, 0x1c80)), mload(add(transcript, 0x920)), f_q))mstore(add(transcript, 0x1cc0), mulmod(mload(add(transcript, 0x1ca0)), mload(add(transcript, 0x920)), f_q))mstore(add(transcript, 0x1ce0), mulmod(mload(add(transcript, 0x780)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1d00), mulmod(mload(add(transcript, 0x1ce0)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1d20), mulmod(mload(add(transcript, 0x1d00)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1d40), mulmod(mload(add(transcript, 0x1d20)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1d60), mulmod(mload(add(transcript, 0x1d40)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1d80), mulmod(mload(add(transcript, 0x1d60)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1da0), mulmod(mload(add(transcript, 0x1d80)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1dc0), mulmod(mload(add(transcript, 0x1da0)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1de0), mulmod(mload(add(transcript, 0x1dc0)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1e00), mulmod(mload(add(transcript, 0x1de0)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1e20), mulmod(mload(add(transcript, 0x1e00)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1e40), mulmod(mload(add(transcript, 0x1e20)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1e60), mulmod(mload(add(transcript, 0x1e40)), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1e80), mulmod(sub(f_q, mload(add(transcript, 0x500))), 1, f_q))mstore(add(transcript, 0x1ea0), mulmod(sub(f_q, mload(add(transcript, 0x680))), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1ec0), mulmod(1, mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x1ee0), addmod(mload(add(transcript, 0x1e80)), mload(add(transcript, 0x1ea0)), f_q))mstore(add(transcript, 0x1f00), mulmod(sub(f_q, mload(add(transcript, 0x6c0))), mload(add(transcript, 0x1ce0)), f_q))mstore(add(transcript, 0x1f20), mulmod(1, mload(add(transcript, 0x1ce0)), f_q))mstore(add(transcript, 0x1f40), addmod(mload(add(transcript, 0x1ee0)), mload(add(transcript, 0x1f00)), f_q))mstore(add(transcript, 0x1f60), mulmod(sub(f_q, mload(add(transcript, 0x700))), mload(add(transcript, 0x1d00)), f_q))mstore(add(transcript, 0x1f80), mulmod(1, mload(add(transcript, 0x1d00)), f_q))mstore(add(transcript, 0x1fa0), addmod(mload(add(transcript, 0x1f40)), mload(add(transcript, 0x1f60)), f_q))mstore(add(transcript, 0x1fc0), mulmod(sub(f_q, mload(add(transcript, 0x740))), mload(add(transcript, 0x1d20)), f_q))mstore(add(transcript, 0x1fe0), mulmod(1, mload(add(transcript, 0x1d20)), f_q))mstore(add(transcript, 0x2000), addmod(mload(add(transcript, 0x1fa0)), mload(add(transcript, 0x1fc0)), f_q))mstore(add(transcript, 0x2020), mulmod(sub(f_q, mload(add(transcript, 0x580))), mload(add(transcript, 0x1d40)), f_q))mstore(add(transcript, 0x2040), mulmod(1, mload(add(transcript, 0x1d40)), f_q))mstore(add(transcript, 0x2060), addmod(mload(add(transcript, 0x2000)), mload(add(transcript, 0x2020)), f_q))mstore(add(transcript, 0x2080), mulmod(sub(f_q, mload(add(transcript, 0x5a0))), mload(add(transcript, 0x1d60)), f_q))mstore(add(transcript, 0x20a0), mulmod(1, mload(add(transcript, 0x1d60)), f_q))mstore(add(transcript, 0x20c0), addmod(mload(add(transcript, 0x2060)), mload(add(transcript, 0x2080)), f_q))mstore(add(transcript, 0x20e0), mulmod(sub(f_q, mload(add(transcript, 0x5c0))), mload(add(transcript, 0x1d80)), f_q))mstore(add(transcript, 0x2100), mulmod(1, mload(add(transcript, 0x1d80)), f_q))mstore(add(transcript, 0x2120), addmod(mload(add(transcript, 0x20c0)), mload(add(transcript, 0x20e0)), f_q))mstore(add(transcript, 0x2140), mulmod(sub(f_q, mload(add(transcript, 0x5e0))), mload(add(transcript, 0x1da0)), f_q))mstore(add(transcript, 0x2160), mulmod(1, mload(add(transcript, 0x1da0)), f_q))mstore(add(transcript, 0x2180), addmod(mload(add(transcript, 0x2120)), mload(add(transcript, 0x2140)), f_q))mstore(add(transcript, 0x21a0), mulmod(sub(f_q, mload(add(transcript, 0x620))), mload(add(transcript, 0x1dc0)), f_q))mstore(add(transcript, 0x21c0), mulmod(1, mload(add(transcript, 0x1dc0)), f_q))mstore(add(transcript, 0x21e0), addmod(mload(add(transcript, 0x2180)), mload(add(transcript, 0x21a0)), f_q))mstore(add(transcript, 0x2200), mulmod(sub(f_q, mload(add(transcript, 0x640))), mload(add(transcript, 0x1de0)), f_q))mstore(add(transcript, 0x2220), mulmod(1, mload(add(transcript, 0x1de0)), f_q))mstore(add(transcript, 0x2240), addmod(mload(add(transcript, 0x21e0)), mload(add(transcript, 0x2200)), f_q))mstore(add(transcript, 0x2260), mulmod(sub(f_q, mload(add(transcript, 0x660))), mload(add(transcript, 0x1e00)), f_q))mstore(add(transcript, 0x2280), mulmod(1, mload(add(transcript, 0x1e00)), f_q))mstore(add(transcript, 0x22a0), addmod(mload(add(transcript, 0x2240)), mload(add(transcript, 0x2260)), f_q))mstore(add(transcript, 0x22c0), mulmod(sub(f_q, mload(add(transcript, 0x1c40))), mload(add(transcript, 0x1e20)), f_q))mstore(add(transcript, 0x22e0), mulmod(1, mload(add(transcript, 0x1e20)), f_q))mstore(add(transcript, 0x2300), mulmod(mload(add(transcript, 0x1be0)), mload(add(transcript, 0x1e20)), f_q))mstore(add(transcript, 0x2320), mulmod(mload(add(transcript, 0x1c00)), mload(add(transcript, 0x1e20)), f_q))mstore(add(transcript, 0x2340), mulmod(mload(add(transcript, 0x1c20)), mload(add(transcript, 0x1e20)), f_q))mstore(add(transcript, 0x2360), addmod(mload(add(transcript, 0x22a0)), mload(add(transcript, 0x22c0)), f_q))mstore(add(transcript, 0x2380), mulmod(sub(f_q, mload(add(transcript, 0x600))), mload(add(transcript, 0x1e40)), f_q))mstore(add(transcript, 0x23a0), mulmod(1, mload(add(transcript, 0x1e40)), f_q))mstore(add(transcript, 0x23c0), addmod(mload(add(transcript, 0x2360)), mload(add(transcript, 0x2380)), f_q))mstore(add(transcript, 0x23e0), mulmod(mload(add(transcript, 0x23c0)), 1, f_q))mstore(add(transcript, 0x2400), mulmod(mload(add(transcript, 0x1ec0)), 1, f_q))mstore(add(transcript, 0x2420), mulmod(mload(add(transcript, 0x1f20)), 1, f_q))mstore(add(transcript, 0x2440), mulmod(mload(add(transcript, 0x1f80)), 1, f_q))mstore(add(transcript, 0x2460), mulmod(mload(add(transcript, 0x1fe0)), 1, f_q))mstore(add(transcript, 0x2480), mulmod(mload(add(transcript, 0x2040)), 1, f_q))mstore(add(transcript, 0x24a0), mulmod(mload(add(transcript, 0x20a0)), 1, f_q))mstore(add(transcript, 0x24c0), mulmod(mload(add(transcript, 0x2100)), 1, f_q))mstore(add(transcript, 0x24e0), mulmod(mload(add(transcript, 0x2160)), 1, f_q))mstore(add(transcript, 0x2500), mulmod(mload(add(transcript, 0x21c0)), 1, f_q))mstore(add(transcript, 0x2520), mulmod(mload(add(transcript, 0x2220)), 1, f_q))mstore(add(transcript, 0x2540), mulmod(mload(add(transcript, 0x2280)), 1, f_q))mstore(add(transcript, 0x2560), mulmod(mload(add(transcript, 0x22e0)), 1, f_q))mstore(add(transcript, 0x2580), mulmod(mload(add(transcript, 0x2300)), 1, f_q))mstore(add(transcript, 0x25a0), mulmod(mload(add(transcript, 0x2320)), 1, f_q))mstore(add(transcript, 0x25c0), mulmod(mload(add(transcript, 0x2340)), 1, f_q))mstore(add(transcript, 0x25e0), mulmod(mload(add(transcript, 0x23a0)), 1, f_q))mstore(add(transcript, 0x2600), mulmod(sub(f_q, mload(add(transcript, 0x520))), 1, f_q))mstore(add(transcript, 0x2620), mulmod(sub(f_q, mload(add(transcript, 0x6a0))), mload(add(transcript, 0x780)), f_q))mstore(add(transcript, 0x2640), addmod(mload(add(transcript, 0x2600)), mload(add(transcript, 0x2620)), f_q))mstore(add(transcript, 0x2660), mulmod(sub(f_q, mload(add(transcript, 0x6e0))), mload(add(transcript, 0x1ce0)), f_q))mstore(add(transcript, 0x2680), addmod(mload(add(transcript, 0x2640)), mload(add(transcript, 0x2660)), f_q))mstore(add(transcript, 0x26a0), mulmod(mload(add(transcript, 0x2680)), mload(add(transcript, 0x920)), f_q))mstore(add(transcript, 0x26c0), mulmod(1, mload(add(transcript, 0x920)), f_q))mstore(add(transcript, 0x26e0), mulmod(mload(add(transcript, 0x1ec0)), mload(add(transcript, 0x920)), f_q))mstore(add(transcript, 0x2700), mulmod(mload(add(transcript, 0x1f20)), mload(add(transcript, 0x920)), f_q))mstore(add(transcript, 0x2720), addmod(mload(add(transcript, 0x23e0)), mload(add(transcript, 0x26a0)), f_q))mstore(add(transcript, 0x2740), addmod(1, mload(add(transcript, 0x26c0)), f_q))mstore(add(transcript, 0x2760), addmod(mload(add(transcript, 0x2400)), mload(add(transcript, 0x26e0)), f_q))mstore(add(transcript, 0x2780), addmod(mload(add(transcript, 0x2420)), mload(add(transcript, 0x2700)), f_q))mstore(add(transcript, 0x27a0), mulmod(sub(f_q, mload(add(transcript, 0x540))), 1, f_q))mstore(add(transcript, 0x27c0), mulmod(mload(add(transcript, 0x27a0)), mload(add(transcript, 0x1c60)), f_q))mstore(add(transcript, 0x27e0), mulmod(1, mload(add(transcript, 0x1c60)), f_q))mstore(add(transcript, 0x2800), addmod(mload(add(transcript, 0x2720)), mload(add(transcript, 0x27c0)), f_q))mstore(add(transcript, 0x2820), addmod(mload(add(transcript, 0x2740)), mload(add(transcript, 0x27e0)), f_q))mstore(add(transcript, 0x2840), mulmod(sub(f_q, mload(add(transcript, 0x560))), 1, f_q))mstore(add(transcript, 0x2860), mulmod(mload(add(transcript, 0x2840)), mload(add(transcript, 0x1c80)), f_q))mstore(add(transcript, 0x2880), mulmod(1, mload(add(transcript, 0x1c80)), f_q))mstore(add(transcript, 0x28a0), addmod(mload(add(transcript, 0x2800)), mload(add(transcript, 0x2860)), f_q))mstore(add(transcript, 0x28c0), addmod(mload(add(transcript, 0x2820)), mload(add(transcript, 0x2880)), f_q))mstore(add(transcript, 0x28e0), mulmod(sub(f_q, mload(add(transcript, 0x720))), 1, f_q))mstore(add(transcript, 0x2900), mulmod(mload(add(transcript, 0x28e0)), mload(add(transcript, 0x1ca0)), f_q))mstore(add(transcript, 0x2920), mulmod(1, mload(add(transcript, 0x1ca0)), f_q))mstore(add(transcript, 0x2940), addmod(mload(add(transcript, 0x28a0)), mload(add(transcript, 0x2900)), f_q))mstore(add(transcript, 0x2960), addmod(mload(add(transcript, 0x2440)), mload(add(transcript, 0x2920)), f_q))mstore(add(transcript, 0x2980), mulmod(1, mload(add(transcript, 0x4c0)), f_q))mstore(add(transcript, 0x29a0), mulmod(1, mload(add(transcript, 0x2980)), f_q))mstore(add(transcript, 0x29c0), mulmod(6252951856119339508807713076978770803512896272623217303779254502899773638908, mload(add(transcript, 0x4c0)), f_q))mstore(add(transcript, 0x29e0), mulmod(mload(add(transcript, 0x26c0)), mload(add(transcript, 0x29c0)), f_q))mstore(add(transcript, 0x2a00), mulmod(7393649265675507591155086225434297871937368251641985215568891852805958167681, mload(add(transcript, 0x4c0)), f_q))mstore(add(transcript, 0x2a20), mulmod(mload(add(transcript, 0x27e0)), mload(add(transcript, 0x2a00)), f_q))mstore(add(transcript, 0x2a40), mulmod(7274544076708594923658723438209548371461798187263202684844743708658536398896, mload(add(transcript, 0x4c0)), f_q))mstore(add(transcript, 0x2a60), mulmod(mload(add(transcript, 0x2880)), mload(add(transcript, 0x2a40)), f_q))mstore(add(transcript, 0x2a80), mulmod(4260969412351770314333984243767775737437927068151180798236715529158398853173, mload(add(transcript, 0x4c0)), f_q))mstore(add(transcript, 0x2aa0), mulmod(mload(add(transcript, 0x2920)), mload(add(transcript, 0x2a80)), f_q))mstore(add(transcript, 0x2ac0), 0x0000000000000000000000000000000000000000000000000000000000000001)                    mstore(add(transcript, 0x2ae0), 0x0000000000000000000000000000000000000000000000000000000000000002)mstore(add(transcript, 0x2b00), mload(add(transcript, 0x2940)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x2ac0), 0x60, add(transcript, 0x2ac0), 0x40), 1), success)mstore(add(transcript, 0x2b20), mload(add(transcript, 0xa0)))                    mstore(add(transcript, 0x2b40), mload(add(transcript, 0xc0)))mstore(add(transcript, 0x2b60), mload(add(transcript, 0x28c0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x2b20), 0x60, add(transcript, 0x2b20), 0x40), 1), success)mstore(add(transcript, 0x2b80), mload(add(transcript, 0x2ac0)))                    mstore(add(transcript, 0x2ba0), mload(add(transcript, 0x2ae0)))mstore(add(transcript, 0x2bc0), mload(add(transcript, 0x2b20)))                    mstore(add(transcript, 0x2be0), mload(add(transcript, 0x2b40)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x2b80), 0x80, add(transcript, 0x2b80), 0x40), 1), success)mstore(add(transcript, 0x2c00), mload(add(transcript, 0x280)))                    mstore(add(transcript, 0x2c20), mload(add(transcript, 0x2a0)))mstore(add(transcript, 0x2c40), mload(add(transcript, 0x2760)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x2c00), 0x60, add(transcript, 0x2c00), 0x40), 1), success)mstore(add(transcript, 0x2c60), mload(add(transcript, 0x2b80)))                    mstore(add(transcript, 0x2c80), mload(add(transcript, 0x2ba0)))mstore(add(transcript, 0x2ca0), mload(add(transcript, 0x2c00)))                    mstore(add(transcript, 0x2cc0), mload(add(transcript, 0x2c20)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x2c60), 0x80, add(transcript, 0x2c60), 0x40), 1), success)mstore(add(transcript, 0x2ce0), mload(add(transcript, 0x2c0)))                    mstore(add(transcript, 0x2d00), mload(add(transcript, 0x2e0)))mstore(add(transcript, 0x2d20), mload(add(transcript, 0x2780)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x2ce0), 0x60, add(transcript, 0x2ce0), 0x40), 1), success)mstore(add(transcript, 0x2d40), mload(add(transcript, 0x2c60)))                    mstore(add(transcript, 0x2d60), mload(add(transcript, 0x2c80)))mstore(add(transcript, 0x2d80), mload(add(transcript, 0x2ce0)))                    mstore(add(transcript, 0x2da0), mload(add(transcript, 0x2d00)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x2d40), 0x80, add(transcript, 0x2d40), 0x40), 1), success)mstore(add(transcript, 0x2dc0), mload(add(transcript, 0x140)))                    mstore(add(transcript, 0x2de0), mload(add(transcript, 0x160)))mstore(add(transcript, 0x2e00), mload(add(transcript, 0x2960)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x2dc0), 0x60, add(transcript, 0x2dc0), 0x40), 1), success)mstore(add(transcript, 0x2e20), mload(add(transcript, 0x2d40)))                    mstore(add(transcript, 0x2e40), mload(add(transcript, 0x2d60)))mstore(add(transcript, 0x2e60), mload(add(transcript, 0x2dc0)))                    mstore(add(transcript, 0x2e80), mload(add(transcript, 0x2de0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x2e20), 0x80, add(transcript, 0x2e20), 0x40), 1), success)mstore(add(transcript, 0x2ea0), mload(add(transcript, 0x180)))                    mstore(add(transcript, 0x2ec0), mload(add(transcript, 0x1a0)))mstore(add(transcript, 0x2ee0), mload(add(transcript, 0x2460)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x2ea0), 0x60, add(transcript, 0x2ea0), 0x40), 1), success)mstore(add(transcript, 0x2f00), mload(add(transcript, 0x2e20)))                    mstore(add(transcript, 0x2f20), mload(add(transcript, 0x2e40)))mstore(add(transcript, 0x2f40), mload(add(transcript, 0x2ea0)))                    mstore(add(transcript, 0x2f60), mload(add(transcript, 0x2ec0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x2f00), 0x80, add(transcript, 0x2f00), 0x40), 1), success)mstore(add(transcript, 0x2f80), 0x1c0e64e993c23bba8fe97ac8366a78a8fadce207f083c19f875ba01e279fb9fc)                    mstore(add(transcript, 0x2fa0), 0x2881c5c03f7b2e6d350daf9b990588cea5200310e5013c14aeb683c86d79676f)mstore(add(transcript, 0x2fc0), mload(add(transcript, 0x2480)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x2f80), 0x60, add(transcript, 0x2f80), 0x40), 1), success)mstore(add(transcript, 0x2fe0), mload(add(transcript, 0x2f00)))                    mstore(add(transcript, 0x3000), mload(add(transcript, 0x2f20)))mstore(add(transcript, 0x3020), mload(add(transcript, 0x2f80)))                    mstore(add(transcript, 0x3040), mload(add(transcript, 0x2fa0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x2fe0), 0x80, add(transcript, 0x2fe0), 0x40), 1), success)mstore(add(transcript, 0x3060), 0x1df3ae5a2ddc86414867c8c85db2650652f11bfc813fac3811575520b5fcf8b4)                    mstore(add(transcript, 0x3080), 0x168422001a82101261961a342fc3a3a8e843cc49462bb88abbbfa9f67c347317)mstore(add(transcript, 0x30a0), mload(add(transcript, 0x24a0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3060), 0x60, add(transcript, 0x3060), 0x40), 1), success)mstore(add(transcript, 0x30c0), mload(add(transcript, 0x2fe0)))                    mstore(add(transcript, 0x30e0), mload(add(transcript, 0x3000)))mstore(add(transcript, 0x3100), mload(add(transcript, 0x3060)))                    mstore(add(transcript, 0x3120), mload(add(transcript, 0x3080)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x30c0), 0x80, add(transcript, 0x30c0), 0x40), 1), success)mstore(add(transcript, 0x3140), 0x273a4e7ef5f0677cd5e87ee9e8209e0ed5b1400b3e3a38ee3929b477d8449f1c)                    mstore(add(transcript, 0x3160), 0x11ac8663852a0a59ee1f82ef1745287acab0fdefb058b45ae10e3bc8e7c91be9)mstore(add(transcript, 0x3180), mload(add(transcript, 0x24c0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3140), 0x60, add(transcript, 0x3140), 0x40), 1), success)mstore(add(transcript, 0x31a0), mload(add(transcript, 0x30c0)))                    mstore(add(transcript, 0x31c0), mload(add(transcript, 0x30e0)))mstore(add(transcript, 0x31e0), mload(add(transcript, 0x3140)))                    mstore(add(transcript, 0x3200), mload(add(transcript, 0x3160)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x31a0), 0x80, add(transcript, 0x31a0), 0x40), 1), success)mstore(add(transcript, 0x3220), 0x1bdf949e8e4cccb25ce647e1e78ee9e3231b56a0026390d20f09ef1f41683483)                    mstore(add(transcript, 0x3240), 0x29a73fd665b8e95c978190e74fe49c4878491100f50f79a3aa0f8a945b3229a8)mstore(add(transcript, 0x3260), mload(add(transcript, 0x24e0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3220), 0x60, add(transcript, 0x3220), 0x40), 1), success)mstore(add(transcript, 0x3280), mload(add(transcript, 0x31a0)))                    mstore(add(transcript, 0x32a0), mload(add(transcript, 0x31c0)))mstore(add(transcript, 0x32c0), mload(add(transcript, 0x3220)))                    mstore(add(transcript, 0x32e0), mload(add(transcript, 0x3240)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3280), 0x80, add(transcript, 0x3280), 0x40), 1), success)mstore(add(transcript, 0x3300), 0x137609cd17da611ecd100efbcc3481d4dd4578ec391e51ac6e2861b674526b54)                    mstore(add(transcript, 0x3320), 0x27b75ae81accffc9f77ac7b909fef1809cb5cfbe2349265f957169d357451c00)mstore(add(transcript, 0x3340), mload(add(transcript, 0x2500)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3300), 0x60, add(transcript, 0x3300), 0x40), 1), success)mstore(add(transcript, 0x3360), mload(add(transcript, 0x3280)))                    mstore(add(transcript, 0x3380), mload(add(transcript, 0x32a0)))mstore(add(transcript, 0x33a0), mload(add(transcript, 0x3300)))                    mstore(add(transcript, 0x33c0), mload(add(transcript, 0x3320)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3360), 0x80, add(transcript, 0x3360), 0x40), 1), success)mstore(add(transcript, 0x33e0), 0x19809d6e85e277ece779da992394f867fda36e44b87ebc9d0ef01966fe3ffa9e)                    mstore(add(transcript, 0x3400), 0x15a365ab1490b24434f13e31664dd58486754b8c223726d2aae02af5e392893c)mstore(add(transcript, 0x3420), mload(add(transcript, 0x2520)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x33e0), 0x60, add(transcript, 0x33e0), 0x40), 1), success)mstore(add(transcript, 0x3440), mload(add(transcript, 0x3360)))                    mstore(add(transcript, 0x3460), mload(add(transcript, 0x3380)))mstore(add(transcript, 0x3480), mload(add(transcript, 0x33e0)))                    mstore(add(transcript, 0x34a0), mload(add(transcript, 0x3400)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3440), 0x80, add(transcript, 0x3440), 0x40), 1), success)mstore(add(transcript, 0x34c0), 0x28ad95b674fe8c69d2a63a519d3055a91748863f99839ee9af77ae621d3b58b9)                    mstore(add(transcript, 0x34e0), 0x0f35fd44c33d191dbbbbf68f10206ba384410a32a49ef209e5b1d9351d9fe31d)mstore(add(transcript, 0x3500), mload(add(transcript, 0x2540)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x34c0), 0x60, add(transcript, 0x34c0), 0x40), 1), success)mstore(add(transcript, 0x3520), mload(add(transcript, 0x3440)))                    mstore(add(transcript, 0x3540), mload(add(transcript, 0x3460)))mstore(add(transcript, 0x3560), mload(add(transcript, 0x34c0)))                    mstore(add(transcript, 0x3580), mload(add(transcript, 0x34e0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3520), 0x80, add(transcript, 0x3520), 0x40), 1), success)mstore(add(transcript, 0x35a0), mload(add(transcript, 0x3a0)))                    mstore(add(transcript, 0x35c0), mload(add(transcript, 0x3c0)))mstore(add(transcript, 0x35e0), mload(add(transcript, 0x2560)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x35a0), 0x60, add(transcript, 0x35a0), 0x40), 1), success)mstore(add(transcript, 0x3600), mload(add(transcript, 0x3520)))                    mstore(add(transcript, 0x3620), mload(add(transcript, 0x3540)))mstore(add(transcript, 0x3640), mload(add(transcript, 0x35a0)))                    mstore(add(transcript, 0x3660), mload(add(transcript, 0x35c0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3600), 0x80, add(transcript, 0x3600), 0x40), 1), success)mstore(add(transcript, 0x3680), mload(add(transcript, 0x3e0)))                    mstore(add(transcript, 0x36a0), mload(add(transcript, 0x400)))mstore(add(transcript, 0x36c0), mload(add(transcript, 0x2580)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3680), 0x60, add(transcript, 0x3680), 0x40), 1), success)mstore(add(transcript, 0x36e0), mload(add(transcript, 0x3600)))                    mstore(add(transcript, 0x3700), mload(add(transcript, 0x3620)))mstore(add(transcript, 0x3720), mload(add(transcript, 0x3680)))                    mstore(add(transcript, 0x3740), mload(add(transcript, 0x36a0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x36e0), 0x80, add(transcript, 0x36e0), 0x40), 1), success)mstore(add(transcript, 0x3760), mload(add(transcript, 0x420)))                    mstore(add(transcript, 0x3780), mload(add(transcript, 0x440)))mstore(add(transcript, 0x37a0), mload(add(transcript, 0x25a0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3760), 0x60, add(transcript, 0x3760), 0x40), 1), success)mstore(add(transcript, 0x37c0), mload(add(transcript, 0x36e0)))                    mstore(add(transcript, 0x37e0), mload(add(transcript, 0x3700)))mstore(add(transcript, 0x3800), mload(add(transcript, 0x3760)))                    mstore(add(transcript, 0x3820), mload(add(transcript, 0x3780)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x37c0), 0x80, add(transcript, 0x37c0), 0x40), 1), success)mstore(add(transcript, 0x3840), mload(add(transcript, 0x460)))                    mstore(add(transcript, 0x3860), mload(add(transcript, 0x480)))mstore(add(transcript, 0x3880), mload(add(transcript, 0x25c0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3840), 0x60, add(transcript, 0x3840), 0x40), 1), success)mstore(add(transcript, 0x38a0), mload(add(transcript, 0x37c0)))                    mstore(add(transcript, 0x38c0), mload(add(transcript, 0x37e0)))mstore(add(transcript, 0x38e0), mload(add(transcript, 0x3840)))                    mstore(add(transcript, 0x3900), mload(add(transcript, 0x3860)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x38a0), 0x80, add(transcript, 0x38a0), 0x40), 1), success)mstore(add(transcript, 0x3920), mload(add(transcript, 0x300)))                    mstore(add(transcript, 0x3940), mload(add(transcript, 0x320)))mstore(add(transcript, 0x3960), mload(add(transcript, 0x25e0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3920), 0x60, add(transcript, 0x3920), 0x40), 1), success)mstore(add(transcript, 0x3980), mload(add(transcript, 0x38a0)))                    mstore(add(transcript, 0x39a0), mload(add(transcript, 0x38c0)))mstore(add(transcript, 0x39c0), mload(add(transcript, 0x3920)))                    mstore(add(transcript, 0x39e0), mload(add(transcript, 0x3940)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3980), 0x80, add(transcript, 0x3980), 0x40), 1), success)mstore(add(transcript, 0x3a00), mload(add(transcript, 0x7c0)))                    mstore(add(transcript, 0x3a20), mload(add(transcript, 0x7e0)))mstore(add(transcript, 0x3a40), mload(add(transcript, 0x29a0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3a00), 0x60, add(transcript, 0x3a00), 0x40), 1), success)mstore(add(transcript, 0x3a60), mload(add(transcript, 0x3980)))                    mstore(add(transcript, 0x3a80), mload(add(transcript, 0x39a0)))mstore(add(transcript, 0x3aa0), mload(add(transcript, 0x3a00)))                    mstore(add(transcript, 0x3ac0), mload(add(transcript, 0x3a20)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3a60), 0x80, add(transcript, 0x3a60), 0x40), 1), success)mstore(add(transcript, 0x3ae0), mload(add(transcript, 0x800)))                    mstore(add(transcript, 0x3b00), mload(add(transcript, 0x820)))mstore(add(transcript, 0x3b20), mload(add(transcript, 0x29e0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3ae0), 0x60, add(transcript, 0x3ae0), 0x40), 1), success)mstore(add(transcript, 0x3b40), mload(add(transcript, 0x3a60)))                    mstore(add(transcript, 0x3b60), mload(add(transcript, 0x3a80)))mstore(add(transcript, 0x3b80), mload(add(transcript, 0x3ae0)))                    mstore(add(transcript, 0x3ba0), mload(add(transcript, 0x3b00)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3b40), 0x80, add(transcript, 0x3b40), 0x40), 1), success)mstore(add(transcript, 0x3bc0), mload(add(transcript, 0x840)))                    mstore(add(transcript, 0x3be0), mload(add(transcript, 0x860)))mstore(add(transcript, 0x3c00), mload(add(transcript, 0x2a20)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3bc0), 0x60, add(transcript, 0x3bc0), 0x40), 1), success)mstore(add(transcript, 0x3c20), mload(add(transcript, 0x3b40)))                    mstore(add(transcript, 0x3c40), mload(add(transcript, 0x3b60)))mstore(add(transcript, 0x3c60), mload(add(transcript, 0x3bc0)))                    mstore(add(transcript, 0x3c80), mload(add(transcript, 0x3be0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3c20), 0x80, add(transcript, 0x3c20), 0x40), 1), success)mstore(add(transcript, 0x3ca0), mload(add(transcript, 0x880)))                    mstore(add(transcript, 0x3cc0), mload(add(transcript, 0x8a0)))mstore(add(transcript, 0x3ce0), mload(add(transcript, 0x2a60)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3ca0), 0x60, add(transcript, 0x3ca0), 0x40), 1), success)mstore(add(transcript, 0x3d00), mload(add(transcript, 0x3c20)))                    mstore(add(transcript, 0x3d20), mload(add(transcript, 0x3c40)))mstore(add(transcript, 0x3d40), mload(add(transcript, 0x3ca0)))                    mstore(add(transcript, 0x3d60), mload(add(transcript, 0x3cc0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3d00), 0x80, add(transcript, 0x3d00), 0x40), 1), success)mstore(add(transcript, 0x3d80), mload(add(transcript, 0x8c0)))                    mstore(add(transcript, 0x3da0), mload(add(transcript, 0x8e0)))mstore(add(transcript, 0x3dc0), mload(add(transcript, 0x2aa0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3d80), 0x60, add(transcript, 0x3d80), 0x40), 1), success)mstore(add(transcript, 0x3de0), mload(add(transcript, 0x3d00)))                    mstore(add(transcript, 0x3e00), mload(add(transcript, 0x3d20)))mstore(add(transcript, 0x3e20), mload(add(transcript, 0x3d80)))                    mstore(add(transcript, 0x3e40), mload(add(transcript, 0x3da0)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3de0), 0x80, add(transcript, 0x3de0), 0x40), 1), success)mstore(add(transcript, 0x3e60), mload(add(transcript, 0x800)))                    mstore(add(transcript, 0x3e80), mload(add(transcript, 0x820)))mstore(add(transcript, 0x3ea0), mload(add(transcript, 0x26c0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3e60), 0x60, add(transcript, 0x3e60), 0x40), 1), success)mstore(add(transcript, 0x3ec0), mload(add(transcript, 0x7c0)))                    mstore(add(transcript, 0x3ee0), mload(add(transcript, 0x7e0)))mstore(add(transcript, 0x3f00), mload(add(transcript, 0x3e60)))                    mstore(add(transcript, 0x3f20), mload(add(transcript, 0x3e80)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3ec0), 0x80, add(transcript, 0x3ec0), 0x40), 1), success)mstore(add(transcript, 0x3f40), mload(add(transcript, 0x840)))                    mstore(add(transcript, 0x3f60), mload(add(transcript, 0x860)))mstore(add(transcript, 0x3f80), mload(add(transcript, 0x27e0)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x3f40), 0x60, add(transcript, 0x3f40), 0x40), 1), success)mstore(add(transcript, 0x3fa0), mload(add(transcript, 0x3ec0)))                    mstore(add(transcript, 0x3fc0), mload(add(transcript, 0x3ee0)))mstore(add(transcript, 0x3fe0), mload(add(transcript, 0x3f40)))                    mstore(add(transcript, 0x4000), mload(add(transcript, 0x3f60)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x3fa0), 0x80, add(transcript, 0x3fa0), 0x40), 1), success)mstore(add(transcript, 0x4020), mload(add(transcript, 0x880)))                    mstore(add(transcript, 0x4040), mload(add(transcript, 0x8a0)))mstore(add(transcript, 0x4060), mload(add(transcript, 0x2880)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4020), 0x60, add(transcript, 0x4020), 0x40), 1), success)mstore(add(transcript, 0x4080), mload(add(transcript, 0x3fa0)))                    mstore(add(transcript, 0x40a0), mload(add(transcript, 0x3fc0)))mstore(add(transcript, 0x40c0), mload(add(transcript, 0x4020)))                    mstore(add(transcript, 0x40e0), mload(add(transcript, 0x4040)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4080), 0x80, add(transcript, 0x4080), 0x40), 1), success)mstore(add(transcript, 0x4100), mload(add(transcript, 0x8c0)))                    mstore(add(transcript, 0x4120), mload(add(transcript, 0x8e0)))mstore(add(transcript, 0x4140), mload(add(transcript, 0x2920)))success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x4100), 0x60, add(transcript, 0x4100), 0x40), 1), success)mstore(add(transcript, 0x4160), mload(add(transcript, 0x4080)))                    mstore(add(transcript, 0x4180), mload(add(transcript, 0x40a0)))mstore(add(transcript, 0x41a0), mload(add(transcript, 0x4100)))                    mstore(add(transcript, 0x41c0), mload(add(transcript, 0x4120)))success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x4160), 0x80, add(transcript, 0x4160), 0x40), 1), success)mstore(add(transcript, 0x41e0), mload(add(transcript, 0x3de0)))                    mstore(add(transcript, 0x4200), mload(add(transcript, 0x3e00)))mstore(add(transcript, 0x4220), 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)            mstore(add(transcript, 0x4240), 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)            mstore(add(transcript, 0x4260), 0x090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)            mstore(add(transcript, 0x4280), 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)mstore(add(transcript, 0x42a0), mload(add(transcript, 0x4160)))                    mstore(add(transcript, 0x42c0), mload(add(transcript, 0x4180)))mstore(add(transcript, 0x42e0), 0x0181624e80f3d6ae28df7e01eaeab1c0e919877a3b8a6b7fbc69a6817d596ea2)            mstore(add(transcript, 0x4300), 0x1783d30dcb12d259bb89098addf6280fa4b653be7a152542a28f7b926e27e648)            mstore(add(transcript, 0x4320), 0x00ae44489d41a0d179e2dfdc03bddd883b7109f8b6ae316a59e815c1a6b35304)            mstore(add(transcript, 0x4340), 0x0b2147ab62a386bd63e6de1522109b8c9588ab466f5aadfde8c41ca3749423ee)success := and(eq(staticcall(gas(), 0x8, add(transcript, 0x41e0), 0x180, add(transcript, 0x41e0), 0x20), 1), success)success := and(eq(mload(add(transcript, 0x41e0)), 1), success)} return success; } }
